def datetime = new Date().format('yyyyMMddHHmmss')

pipeline {
    agent any

    stages {
        stage('Download') {
            steps {
                print "===== Nexusからリリース対象モジュールをダウンロードします ====="
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    env.URL = 'http://localhost:8081' +
                            '/service/rest/v1/search/assets/download' +
                            '?sort=version' +
                            '&repository=maven-releases' +
                            '&maven.groupId=' + pom.groupId +
                            '&maven.artifactId=' + pom.artifactId +
                            '&maven.baseVersion=' + pom.version
                            '&maven.extension=jar'
                    env.TMP = 'C:\\jenkins-pipeline-sample\\tmp\\' + datetime + '\\'
                    env.JAR = 'jenkins-pipeline-sample-' + pom.version + '.jar'
                    bat '''
                    mkdir %TMP%
                    bitsadmin /transfer "nexus" "%URL%" %TMP%%JAR%
                    '''
                }
                print "===== リリース対象モジュールを正常にダウンロードしました ====="
            }
        }

        stage('Deploy') {
            steps {
                print "===== デプロイを開始します ====="
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    def jar = 'jenkins-pipeline-sample-' + pom.version + '.jar'

                    bat '''
                    sc.exe stop jenkins-pipeline-sample
                    @echo off
                    :DoWhile
                      sc.exe query jenkins-pipeline-sample | findstr STATE | findstr STOPPED
                      if %errorlevel% equ 0 goto DoWhileExit
                    goto DoWhile
                    :DoWhileExit
                    '''
                    echo "*********************"
                    echo "サービスを停止しました。"
                    echo "*********************"
                    bat "sc.exe query jenkins-pipeline-sample"

                    env.DATETIME = datetime
                    env.JAR = jar
                    bat '''
                    cd C:\\jenkins-pipeline-sample
                    ren jenkins-pipeline-sample.jar jenkins-pipeline-sample.jar.%DATETIME%
                    copy C:\\jenkins-pipeline-sample\\tmp\\%DATETIME%\\%JAR% jenkins-pipeline-sample.jar
                    '''
                    echo "*********************"
                    echo "JARファイルを差し替えました。"
                    echo "*********************"

                    bat '''
                    sc.exe start jenkins-pipeline-sample
                    @echo off
                    :DoWhile
                      sc.exe query jenkins-pipeline-sample | findstr STATE | findstr RUNNING
                      if %errorlevel% equ 0 goto DoWhileExit
                    goto DoWhile
                    :DoWhileExit
                    '''
                    echo "*********************"
                    echo "サービスを起動しました。"
                    echo "*********************"
                    bat "sc.exe query jenkins-pipeline-sample"
                }
                print "===== デプロイを正常に終了しました ====="
            }
        }

        stage('Clean'){
            steps {
                script {
                    timeout(time: 5, unit: "MINUTES") {
                        RELEASE_SCOPE = input message: 'rollback or complete ?', ok: 'Submit!', parameters: [
                            choice(
                                name: 'RELEASE_SCOPE',
                                choices: 'rollback\ncomplete'
                            )
                        ]
                    }

                    switch(RELEASE_SCOPE) {
                        case "rollback":
                            print "===== ロールバックを開始します ====="
                            bat '''
                            sc.exe stop jenkins-pipeline-sample
                            @echo off
                            :DoWhile
                              sc.exe query jenkins-pipeline-sample | findstr STATE | findstr STOPPED
                              if %errorlevel% equ 0 goto DoWhileExit
                            goto DoWhile
                            :DoWhileExit
                            '''
                            echo "*********************"
                            echo "サービスを停止しました。"
                            echo "*********************"
                            bat "sc.exe query jenkins-pipeline-sample"

                            env.DATETIME = datetime
                            bat '''
                            cd C:\\jenkins-pipeline-sample
                            del jenkins-pipeline-sample.jar
                            @echo off
                            :DoWhile
                              if not exist jenkins-pipeline-sample.jar goto DoWhileExit
                            goto DoWhile
                            :DoWhileExit
                            @echo on
                            ren jenkins-pipeline-sample.jar.%DATETIME% jenkins-pipeline-sample.jar
                            '''
                            echo "*********************"
                            echo "JARファイルを元に戻しました。"
                            echo "*********************"

                            bat '''
                            sc.exe start jenkins-pipeline-sample
                            @echo off
                            :DoWhile
                              sc.exe query jenkins-pipeline-sample | findstr STATE | findstr RUNNING
                              if %errorlevel% equ 0 goto DoWhileExit
                            goto DoWhile
                            :DoWhileExit
                            '''
                            echo "*********************"
                            echo "サービスを起動しました。"
                            echo "*********************"
                            bat "sc.exe query jenkins-pipeline-sample"

                            print "===== ロールバックを正常に終了しました ====="
                        break

                        case "complete":
                            print "===== コンプリートを開始します ====="

                            env.DATETIME = datetime
                            bat '''
                            cd C:\\jenkins-pipeline-sample
                            del jenkins-pipeline-sample.jar.%DATETIME%
                            '''

                            print "===== コンプリートを正常に終了しました ====="
                        break
                    }
                }
            }
        }
    }
}
