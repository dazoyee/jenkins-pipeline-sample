pipeline {
    agent any

    tools {
        jdk 'openjdk11'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/ioridazo/jenkins-pipeline-sample.git', branch: 'main'
            }
        }

        stage('Test') {
            steps {
                bat "./mvnw clean test"
            }
        }

        stage('Build') {
            steps {
                bat "./mvnw package -DskipTests=true"

                archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
            }
        }

        stage('Upload') {
            steps {
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    echo pom.version

                    nexusPublisher nexusInstanceId: 'Nexus3', nexusRepositoryId: 'maven-releases', packages: [
                        [
                            $class: 'MavenPackage',
                            mavenAssetList: [
                                [
                                    classifier: '',
                                    extension: '',
                                    filePath: 'target/jenkins-pipeline-sample-' + pom.version + '.jar'
                                    ]
                                ],
                            mavenCoordinate: [
                                artifactId: 'jenkins-pipeline-sample',
                                groupId: 'com.github.ioridazo',
                                packaging: 'jar',
                                version: pom.version
                            ]
                        ]
                    ]

                    // nexusArtifactUploader (
                    //     nexusVersion: 'nexus3',
                    //     protocol: 'http',
                    //     nexusUrl: 'localhost:8081',
                    //     groupId: 'com.github.ioridazo',
                    //     version: pom.version,
                    //     repository: 'maven-releases',
                    //     credentialsId: 'nexus3',
                    //     artifacts: [
                    //         [
                    //             artifactId: 'jenkins-pipeline-sample',
                    //             file: 'target/jenkins-pipeline-sample-' + pom.version + '.jar',
                    //             type: 'jar'
                    //         ]
                    //     ]
                    // )
                }
            }
        }

        stage('Download') {
            steps {
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    def jar = 'jenkins-pipeline-sample-' + pom.version + '.jar'
                    def url = 'http://localhost:8081/repository/maven-releases/com/github/ioridazo/jenkins-pipeline-sample/' + pom.version + '/' + jar
                    bat "mkdir C:\\jenkins-pipeline-sample\\tmp\\now & mkdir C:\\jenkins-pipeline-sample\\tmp\\latest"
                    bat "bitsadmin /transfer \"nexus\" " + url + " C:\\jenkins-pipeline-sample\\tmp\\latest\\" + jar
                }
            }
        }

        stage('Deploy') {
            steps {
                bat "C:\\jenkins-pipeline-sample\\tools\\update.bat"
            }
        }

        stage('Clean'){
            steps {
                script {
                    RELEASE_SCOPE = input message: 'rollback or complete ?', ok: 'Submit!', parameters: [
                        choice(
                            name: 'RELEASE_SCOPE',
                            choices: 'rollback\ncomplete'
                        )
                    ]

                    switch(RELEASE_SCOPE) {
                        case "rollback":
                            bat "C:\\jenkins-pipeline-sample\\tools\\rollback.bat"
                            bat "rmdir /s /q C:\\jenkins-pipeline-sample\\tmp"
                            print "ロールバックしました。"
                        break
                        case "complete":
                            bat "C:\\jenkins-pipeline-sample\\tools\\complete.bat"
                            bat "rmdir /s /q C:\\jenkins-pipeline-sample\\tmp"
                            print "コンプリートしました。"
                        break
                    }
                }
            }
        }
    }
}
